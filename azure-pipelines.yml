trigger:
    - master
    
pool:
    vmImage: 'ubuntu-latest'

variables:
    DockerImageName: 'total-display-278508/telegram-bot'

steps:
- task: NodeTool@0
    inputs:
    versionSpec: '12.13'
    displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
    displayName: 'npm install and build'

- task: CmdLine@1
    displayName: 'Lock image version in deployment.yaml'
    inputs:
    filename: /bin/bash
    arguments: '-c "awk ''{gsub(\"TELEGRAM_BOT_IMAGE\", \"gcr.io/$(DockerImageName):$(Build.BuildId)\", $0); print}'' deployment.yaml > $(build.artifactstagingdirectory)/deployment.yaml"'
- task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
- task: Docker@0
    displayName: 'Build image'
    inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'gcr-tutorial'
    imageName: '$(DockerImageName):$(Build.BuildId)'
- task: Docker@0
    displayName: 'Publish image'
    inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'gcr-tutorial'
    action: 'Push an image'
    imageName: '$(DockerImageName):$(Build.BuildId)'